AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Ingestion-Pipeline


Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Parameters:
  Number:
    Type: String

Resources:
  IngestionBucket: # Bucket for website
    Type: AWS::S3::Bucket
    Properties:
      BucketName: isty-ingestion-bucket

  IngestionFrontBucket: # Bucket for website
    Type: AWS::S3::Bucket
    Properties:
      BucketName: isty-ingestion-front-bucket

  IngestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: isty-ingestion-function
      Role: !Sub arn:aws:iam::${Number}:role/isty-role-lambda-ingestion
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME: isty-ingestion-table
      Events:
        PutFileEvent:
          Type: S3
          Properties:
            Bucket:
              Ref: IngestionBucket
            Events:
              - 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .json

  IngestionFunctionTrigger:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt IngestionFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: arn:aws:s3:::isty-ingestion-bucket

  IngestionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: isty-ingestion-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        -
          AttributeName: annee
          AttributeType: S
        -
          AttributeName: matricule
          AttributeType: S
      KeySchema:
        -
          AttributeName: annee
          KeyType: HASH
        -
          AttributeName: matricule
          KeyType: RANGE


  ResquestsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: isty-ingestion-requests-api
      Auth:
        ApiKeyRequired: true
      StageName: prd

  RequestKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: isty-ingestion-requests-api-key
      Enabled: true
      StageKeys:
        -
          RestApiId: !Ref ResquestsApi
          StageName: !Ref ResquestsApi.Stage

  RequestsPlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: isty-ingestion-requests-api-plan
      Quota:
        Limit: 10000
        Period: MONTH
      Throttle:
        BurstLimit: 1000
        RateLimit: 1
      ApiStages:
        -
          ApiId: !Ref ResquestsApi
          Stage: !Ref ResquestsApi.Stage

  LinkPlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref RequestKey
      KeyType: API_KEY
      UsagePlanId: !Ref RequestsPlan

  RequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: isty-ingestion-api-function
      Role: !Sub arn:aws:iam::${Number}:role/isty-role-lambda-ingestion
      CodeUri: src/
      Handler: app_api.app
      Runtime: python3.8
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ResquestsApi
            Path: /hello
            Method: get
        PostEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ResquestsApi
            Path: /hello
            Method: post







Outputs:
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt IngestionFunction.Arn
